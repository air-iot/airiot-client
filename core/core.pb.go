// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core/core.proto

/*
Package core is a generated protocol buffer package.

It is generated from these files:
	core/core.proto

It has these top-level messages:
	GetDeviceRequest
	GetDataDeviceRequest
	GetRequestName
	QueryDataRequest
	GetOrDeleteDataRequest
	UpdateDataRequest
	MultiUpdateDataRequest
	CreateDataRequest
	LoginUserRequest
	UploadFileRequest
	DownloadFileResponse
*/
package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/air-iot/api-client-go/v4/api"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetDeviceRequest struct {
	Driver string `protobuf:"bytes,1,opt,name=driver" json:"driver,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group" json:"group,omitempty"`
}

func (m *GetDeviceRequest) Reset()                    { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()               {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetDeviceRequest) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *GetDeviceRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type GetDataDeviceRequest struct {
	Driver string `protobuf:"bytes,1,opt,name=driver" json:"driver,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group" json:"group,omitempty"`
	Table  string `protobuf:"bytes,3,opt,name=table" json:"table,omitempty"`
	Id     string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
}

func (m *GetDataDeviceRequest) Reset()                    { *m = GetDataDeviceRequest{} }
func (m *GetDataDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDataDeviceRequest) ProtoMessage()               {}
func (*GetDataDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetDataDeviceRequest) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *GetDataDeviceRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *GetDataDeviceRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *GetDataDeviceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetRequestName struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetRequestName) Reset()                    { *m = GetRequestName{} }
func (m *GetRequestName) String() string            { return proto.CompactTextString(m) }
func (*GetRequestName) ProtoMessage()               {}
func (*GetRequestName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetRequestName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type QueryDataRequest struct {
	Table string `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	Query []byte `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (m *QueryDataRequest) Reset()                    { *m = QueryDataRequest{} }
func (m *QueryDataRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryDataRequest) ProtoMessage()               {}
func (*QueryDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QueryDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *QueryDataRequest) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type GetOrDeleteDataRequest struct {
	Table string `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *GetOrDeleteDataRequest) Reset()                    { *m = GetOrDeleteDataRequest{} }
func (m *GetOrDeleteDataRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrDeleteDataRequest) ProtoMessage()               {}
func (*GetOrDeleteDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetOrDeleteDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *GetOrDeleteDataRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateDataRequest struct {
	Table string `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *UpdateDataRequest) Reset()                    { *m = UpdateDataRequest{} }
func (m *UpdateDataRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDataRequest) ProtoMessage()               {}
func (*UpdateDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *UpdateDataRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type MultiUpdateDataRequest struct {
	Table string `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	Query []byte `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MultiUpdateDataRequest) Reset()                    { *m = MultiUpdateDataRequest{} }
func (m *MultiUpdateDataRequest) String() string            { return proto.CompactTextString(m) }
func (*MultiUpdateDataRequest) ProtoMessage()               {}
func (*MultiUpdateDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MultiUpdateDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *MultiUpdateDataRequest) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *MultiUpdateDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDataRequest struct {
	Table string `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *CreateDataRequest) Reset()                    { *m = CreateDataRequest{} }
func (m *CreateDataRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDataRequest) ProtoMessage()               {}
func (*CreateDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *CreateDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginUserRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *LoginUserRequest) Reset()                    { *m = LoginUserRequest{} }
func (m *LoginUserRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginUserRequest) ProtoMessage()               {}
func (*LoginUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LoginUserRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UploadFileRequest struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *UploadFileRequest) Reset()                    { *m = UploadFileRequest{} }
func (m *UploadFileRequest) String() string            { return proto.CompactTextString(m) }
func (*UploadFileRequest) ProtoMessage()               {}
func (*UploadFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UploadFileRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DownloadFileResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *DownloadFileResponse) Reset()                    { *m = DownloadFileResponse{} }
func (m *DownloadFileResponse) String() string            { return proto.CompactTextString(m) }
func (*DownloadFileResponse) ProtoMessage()               {}
func (*DownloadFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DownloadFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetDeviceRequest)(nil), "core.GetDeviceRequest")
	proto.RegisterType((*GetDataDeviceRequest)(nil), "core.GetDataDeviceRequest")
	proto.RegisterType((*GetRequestName)(nil), "core.GetRequestName")
	proto.RegisterType((*QueryDataRequest)(nil), "core.QueryDataRequest")
	proto.RegisterType((*GetOrDeleteDataRequest)(nil), "core.GetOrDeleteDataRequest")
	proto.RegisterType((*UpdateDataRequest)(nil), "core.UpdateDataRequest")
	proto.RegisterType((*MultiUpdateDataRequest)(nil), "core.MultiUpdateDataRequest")
	proto.RegisterType((*CreateDataRequest)(nil), "core.CreateDataRequest")
	proto.RegisterType((*LoginUserRequest)(nil), "core.LoginUserRequest")
	proto.RegisterType((*UploadFileRequest)(nil), "core.UploadFileRequest")
	proto.RegisterType((*DownloadFileResponse)(nil), "core.DownloadFileResponse")
}

func init() { proto.RegisterFile("core/core.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0xaf, 0xdc, 0xc4, 0x6d, 0x9f, 0x1b, 0xd7, 0x11, 0x21, 0x64, 0x02, 0x87, 0x8e, 0xa7, 0x33,
	0x64, 0xa0, 0x75, 0x52, 0x35, 0x6d, 0x29, 0x26, 0xa5, 0xb1, 0x9d, 0x78, 0x32, 0xc4, 0x10, 0x9c,
	0x06, 0x18, 0x6e, 0x1b, 0xe9, 0xe1, 0x2c, 0x96, 0x76, 0x55, 0x69, 0x5d, 0xc8, 0x37, 0xe0, 0x2b,
	0xc0, 0x09, 0x4e, 0x65, 0x38, 0x33, 0xc3, 0x07, 0xe0, 0xcc, 0x77, 0x62, 0x76, 0x57, 0x92, 0x4d,
	0xac, 0xd0, 0x55, 0x4a, 0x7a, 0x60, 0x72, 0xd1, 0x68, 0xd7, 0xfb, 0x7b, 0x7f, 0x7f, 0xfb, 0xde,
	0xae, 0x0c, 0x37, 0x5c, 0x1e, 0xe1, 0xaa, 0x7c, 0x34, 0xc2, 0x88, 0x0b, 0x6e, 0xcf, 0xc8, 0xf7,
	0xe5, 0x39, 0x12, 0xd2, 0x55, 0x12, 0x52, 0x3d, 0x59, 0x7f, 0x02, 0xb5, 0x2e, 0x8a, 0x0e, 0x3e,
	0xa7, 0x2e, 0xf6, 0xf1, 0xd9, 0x08, 0x63, 0x61, 0x2f, 0x42, 0xd9, 0x8b, 0xe8, 0x73, 0x8c, 0x96,
	0xac, 0x9b, 0xd6, 0xca, 0xb5, 0x7e, 0x32, 0xb2, 0x17, 0x60, 0x76, 0x10, 0xf1, 0x51, 0xb8, 0x54,
	0x52, 0xd3, 0x7a, 0x50, 0xff, 0x16, 0x16, 0xa4, 0x04, 0x22, 0xc8, 0x2b, 0x48, 0x91, 0xb3, 0x82,
	0x1c, 0xfa, 0xb8, 0x74, 0x59, 0xcf, 0xaa, 0x81, 0x5d, 0x85, 0x12, 0xf5, 0x96, 0x66, 0xd4, 0x54,
	0x89, 0x7a, 0xf5, 0x5b, 0x50, 0xed, 0xa2, 0x48, 0x34, 0x7c, 0x4a, 0x02, 0xb4, 0x6d, 0x98, 0x61,
	0x24, 0xc0, 0x44, 0x87, 0x7a, 0xaf, 0x3f, 0x86, 0xda, 0xe7, 0x23, 0x8c, 0x8e, 0xa5, 0x4d, 0xa9,
	0x35, 0x99, 0x7c, 0x6b, 0x52, 0xfe, 0x02, 0xcc, 0x3e, 0x93, 0x2b, 0x95, 0x2d, 0xd7, 0xfb, 0x7a,
	0x50, 0x7f, 0x0c, 0x8b, 0x5d, 0x14, 0x9f, 0x45, 0x1d, 0xf4, 0x51, 0xe0, 0xcb, 0xa5, 0x68, 0x2b,
	0x4b, 0x99, 0x95, 0x3d, 0x98, 0x3f, 0x08, 0x3d, 0x72, 0x06, 0xa8, 0x74, 0xc7, 0x23, 0x82, 0xa8,
	0x28, 0x5c, 0xef, 0xab, 0xf7, 0xfa, 0x57, 0xb0, 0xd8, 0x1b, 0xf9, 0x82, 0x9a, 0xca, 0xcc, 0x75,
	0x2a, 0x57, 0xf2, 0x06, 0xcc, 0xb7, 0x23, 0x34, 0x12, 0x9a, 0xc2, 0x4b, 0x13, 0xf0, 0x15, 0xa8,
	0xed, 0xf2, 0x01, 0x65, 0x07, 0x31, 0x46, 0x93, 0x68, 0x3e, 0x44, 0x96, 0xa1, 0xe5, 0xa0, 0xfe,
	0xae, 0x8c, 0x88, 0xcf, 0x89, 0xb7, 0x4d, 0xfd, 0x8c, 0x20, 0xa9, 0x48, 0x6b, 0x42, 0xe4, 0x7b,
	0xb0, 0xd0, 0xe1, 0xdf, 0xb1, 0xf1, 0xd2, 0x38, 0xe4, 0x2c, 0xc6, 0xbc, 0xb5, 0xce, 0x6f, 0x25,
	0xa8, 0xee, 0x52, 0x17, 0x59, 0x8c, 0xfb, 0x18, 0x49, 0xea, 0xd9, 0xeb, 0x8a, 0x1f, 0x12, 0x99,
	0xfc, 0x60, 0xcf, 0x37, 0x24, 0xd7, 0x15, 0x1d, 0x12, 0xbd, 0xcb, 0x73, 0x6a, 0x2a, 0x15, 0x5d,
	0xbf, 0x64, 0xaf, 0x01, 0x1c, 0xc4, 0x85, 0x10, 0xf7, 0xe1, 0xc6, 0x36, 0x65, 0x5e, 0x8f, 0xb8,
	0x47, 0x94, 0x61, 0x9b, 0x7b, 0x66, 0xb0, 0x8f, 0xf4, 0x66, 0x53, 0xfb, 0x20, 0x55, 0xf7, 0x96,
	0x5a, 0x34, 0xc1, 0xb7, 0x53, 0xd1, 0x4d, 0x98, 0xd3, 0x41, 0x1c, 0x43, 0xd5, 0xee, 0x9e, 0x8a,
	0xec, 0x14, 0x74, 0xc5, 0x72, 0x7e, 0xb2, 0x00, 0x36, 0xc3, 0x30, 0x0d, 0x54, 0x03, 0xae, 0x76,
	0x51, 0x3c, 0x95, 0xc9, 0x49, 0x2c, 0x57, 0xef, 0xa7, 0xea, 0x7e, 0x1f, 0x66, 0x95, 0x6b, 0x46,
	0x6e, 0xae, 0xc2, 0xe5, 0x2e, 0x0a, 0x73, 0xcf, 0x9c, 0x1f, 0x2d, 0x80, 0x5d, 0x3e, 0x48, 0x8d,
	0xbb, 0x03, 0x65, 0x4d, 0x4b, 0xdb, 0x56, 0x2b, 0xf5, 0xe0, 0x3f, 0x53, 0x57, 0xc8, 0x19, 0xe7,
	0xaf, 0x19, 0xa8, 0x48, 0x82, 0xa7, 0xc6, 0x9d, 0x6b, 0x24, 0x6c, 0x07, 0xca, 0x7a, 0x45, 0x01,
	0xcc, 0x1d, 0x28, 0xeb, 0xd2, 0x90, 0x84, 0x4b, 0x0f, 0x4e, 0x5d, 0xde, 0x80, 0x2b, 0x7d, 0x0c,
	0x7d, 0xe2, 0x1a, 0xae, 0x2f, 0x98, 0x8d, 0x0d, 0xb0, 0xbb, 0x28, 0xda, 0xa3, 0x28, 0x42, 0x26,
	0x64, 0xe0, 0x76, 0xd8, 0x37, 0xdc, 0x5e, 0xd4, 0x54, 0x3d, 0x59, 0x2e, 0xf2, 0x48, 0xbe, 0x20,
	0x7f, 0xdf, 0xc3, 0x28, 0xa0, 0x71, 0x4c, 0x39, 0xfb, 0x87, 0x6b, 0x2f, 0xd1, 0x7d, 0x17, 0x2a,
	0x2a, 0x1f, 0x2d, 0xe2, 0x0e, 0x47, 0xa1, 0x51, 0x86, 0x1e, 0x40, 0x4d, 0x87, 0xb7, 0x47, 0x58,
	0x11, 0xdc, 0x43, 0xa8, 0x69, 0x63, 0x26, 0x70, 0x26, 0x36, 0x3a, 0xbf, 0xce, 0x82, 0xfd, 0x54,
	0x96, 0xd4, 0x7d, 0xf7, 0x08, 0x03, 0x72, 0x26, 0x5a, 0x6d, 0xc3, 0xdb, 0xba, 0xc1, 0xa9, 0x86,
	0xdb, 0x3a, 0xd6, 0x15, 0x65, 0x93, 0x79, 0x5d, 0xd5, 0x4b, 0x93, 0x60, 0x9f, 0xec, 0xeb, 0xd3,
	0x72, 0x3e, 0x81, 0x9b, 0x4a, 0x8e, 0xb2, 0xe7, 0x55, 0x85, 0x3d, 0x02, 0x90, 0x35, 0x51, 0xaf,
	0xb2, 0x97, 0xc7, 0xb0, 0x93, 0x27, 0x83, 0x69, 0xe8, 0x3d, 0x98, 0x53, 0x76, 0x6c, 0x05, 0x23,
	0x9f, 0x08, 0x1e, 0x5d, 0xec, 0xad, 0x53, 0x1b, 0xd5, 0xbe, 0x20, 0x22, 0x36, 0x67, 0x4a, 0x53,
	0x37, 0xaa, 0x36, 0x0f, 0x02, 0xc2, 0xbc, 0xd6, 0xf1, 0x4e, 0xa7, 0x40, 0x59, 0xfe, 0x13, 0xa0,
	0xa6, 0xa9, 0x41, 0x44, 0x46, 0xd4, 0xb5, 0x94, 0xa8, 0x09, 0x31, 0x4e, 0x9e, 0xb4, 0xf2, 0x88,
	0x51, 0xd5, 0xbb, 0x52, 0xf3, 0x6c, 0xc7, 0x33, 0x87, 0xae, 0xeb, 0x1c, 0xbf, 0x93, 0x91, 0x29,
	0xe7, 0x50, 0x96, 0xb7, 0x37, 0xd3, 0x44, 0x17, 0x04, 0xde, 0x07, 0x18, 0x17, 0x03, 0x73, 0x2b,
	0x9d, 0x8c, 0x24, 0x59, 0x47, 0x3e, 0x71, 0x52, 0xcb, 0xa3, 0x7c, 0xc6, 0x14, 0x73, 0x90, 0x93,
	0xd1, 0x25, 0xc1, 0x4c, 0x9d, 0xde, 0xf2, 0x0a, 0x1c, 0x8c, 0x0b, 0x55, 0x01, 0xdc, 0x26, 0x2c,
	0x4b, 0xe6, 0x64, 0xf9, 0xef, 0x60, 0x28, 0x5a, 0xc7, 0xf2, 0xb9, 0xd3, 0x89, 0xcd, 0xe8, 0xda,
	0x04, 0xd0, 0x4e, 0x29, 0xd5, 0x49, 0x2e, 0xf2, 0x8f, 0xb2, 0x79, 0xac, 0x79, 0xa3, 0x8b, 0xe2,
	0x4b, 0x12, 0x31, 0xca, 0x06, 0xdb, 0xd4, 0x17, 0x18, 0x49, 0xc5, 0x9a, 0xf4, 0x5b, 0x41, 0x28,
	0xfe, 0xed, 0x98, 0x55, 0xd1, 0xa6, 0x0f, 0x14, 0xe1, 0x0b, 0x92, 0xe0, 0xc9, 0xf4, 0x96, 0x29,
	0x28, 0x61, 0x1d, 0xae, 0x25, 0x84, 0xef, 0xb4, 0xcc, 0x59, 0xf4, 0x01, 0x5c, 0xe9, 0xa2, 0x50,
	0x98, 0x82, 0xfa, 0x9a, 0x29, 0x6d, 0xcf, 0x02, 0x7e, 0x04, 0xd5, 0x89, 0x06, 0x58, 0xc8, 0xe2,
	0x07, 0x69, 0x7e, 0x15, 0xcc, 0x9c, 0xc6, 0x0f, 0xa1, 0x92, 0x70, 0xbf, 0x20, 0x30, 0xe3, 0xf2,
	0x24, 0xce, 0x80, 0xcb, 0x1f, 0x42, 0x75, 0xa2, 0x59, 0x17, 0xc3, 0x7e, 0x0c, 0xd5, 0x31, 0x89,
	0x27, 0x03, 0x6c, 0x48, 0x64, 0xe7, 0xf7, 0x52, 0xd2, 0xf0, 0xfb, 0xe8, 0xf2, 0xc8, 0xbb, 0x38,
	0x47, 0x9a, 0x9d, 0x93, 0x7c, 0xa8, 0xf6, 0x30, 0x8e, 0xc9, 0x00, 0xcf, 0x78, 0x2d, 0x28, 0x74,
	0xca, 0x67, 0x50, 0xeb, 0x90, 0xf8, 0xe8, 0x90, 0x93, 0x71, 0x86, 0xce, 0x53, 0xdf, 0x0b, 0x4b,
	0x2a, 0x14, 0x44, 0xad, 0x4a, 0x15, 0xde, 0x05, 0xd8, 0xe3, 0xb1, 0xd8, 0x25, 0x42, 0x5d, 0x8f,
	0x4d, 0x94, 0xea, 0x7b, 0x9c, 0x39, 0x91, 0xd6, 0xe0, 0x9a, 0x54, 0xa1, 0x01, 0x46, 0x79, 0xf8,
	0xc5, 0x82, 0x4a, 0x9f, 0xfb, 0xf8, 0x7a, 0x78, 0xbb, 0x0e, 0xd5, 0x4d, 0x2f, 0xa0, 0x4c, 0x6a,
	0x6c, 0x1f, 0xa1, 0x3b, 0x34, 0x29, 0xf8, 0x0e, 0x83, 0x6a, 0x9b, 0x08, 0xe2, 0x8f, 0xaf, 0x90,
	0xe7, 0x7b, 0x5f, 0x1d, 0x42, 0x45, 0x36, 0xc2, 0xd7, 0xa3, 0x6c, 0x03, 0xaa, 0xfb, 0x28, 0x04,
	0x65, 0x67, 0x72, 0xce, 0xf9, 0xa3, 0x04, 0x6f, 0xee, 0x1f, 0xc7, 0x02, 0x83, 0x2f, 0x48, 0x44,
	0xd5, 0xc5, 0xe3, 0xa2, 0x02, 0x19, 0x31, 0xff, 0xc5, 0x65, 0x98, 0xd3, 0x37, 0xbb, 0xff, 0x4d,
	0xc4, 0x6e, 0x43, 0x79, 0x27, 0x08, 0x79, 0x24, 0x8c, 0x3c, 0xb8, 0x0d, 0xe5, 0xad, 0xef, 0x8d,
	0x57, 0xaf, 0x4b, 0x53, 0x7c, 0x4e, 0xbc, 0x22, 0xdf, 0xa5, 0xec, 0x36, 0x5c, 0x4d, 0x3f, 0xf8,
	0x9d, 0xee, 0x76, 0x72, 0x99, 0xcc, 0xfb, 0x32, 0x58, 0xbf, 0xb4, 0x66, 0x25, 0x2d, 0x36, 0x1e,
	0xf6, 0x08, 0x23, 0x83, 0x8b, 0x4f, 0x35, 0x86, 0x04, 0x6f, 0x35, 0xe1, 0x96, 0xcb, 0x1a, 0x84,
	0x46, 0x94, 0x8b, 0x46, 0xec, 0x0d, 0x1b, 0xae, 0x4f, 0x91, 0x89, 0x86, 0x37, 0x3a, 0x3c, 0xe4,
	0x8d, 0x41, 0x14, 0xba, 0x2a, 0xee, 0x7b, 0xd6, 0xd7, 0x95, 0x86, 0xfa, 0x23, 0xa1, 0x29, 0x1f,
	0x3f, 0x58, 0xd6, 0xcf, 0x96, 0x75, 0x58, 0x56, 0xff, 0x1f, 0xdc, 0xfb, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x40, 0xc1, 0xc6, 0x26, 0x67, 0x18, 0x00, 0x00,
}

// Copyright 2015 The gRPC Authors
// protoc -I . --go_out=plugins=grpc:. ./warning.proto

// protoc -I ./ --go_out=. ./warning/warning.proto
// protoc -I ./ --go-grpc_out=. warning/warning.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: warning/warning.proto

package warning

import (
	api "github.com/air-iot/api-client-go/v4/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryWarningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Archive string `protobuf:"bytes,2,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (x *QueryWarningRequest) Reset() {
	*x = QueryWarningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_warning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryWarningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWarningRequest) ProtoMessage() {}

func (x *QueryWarningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warning_warning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWarningRequest.ProtoReflect.Descriptor instead.
func (*QueryWarningRequest) Descriptor() ([]byte, []int) {
	return file_warning_warning_proto_rawDescGZIP(), []int{0}
}

func (x *QueryWarningRequest) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryWarningRequest) GetArchive() string {
	if x != nil {
		return x.Archive
	}
	return ""
}

type GetOrDeleteWarningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Archive string `protobuf:"bytes,2,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (x *GetOrDeleteWarningRequest) Reset() {
	*x = GetOrDeleteWarningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_warning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrDeleteWarningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrDeleteWarningRequest) ProtoMessage() {}

func (x *GetOrDeleteWarningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_warning_warning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrDeleteWarningRequest.ProtoReflect.Descriptor instead.
func (*GetOrDeleteWarningRequest) Descriptor() ([]byte, []int) {
	return file_warning_warning_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrDeleteWarningRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOrDeleteWarningRequest) GetArchive() string {
	if x != nil {
		return x.Archive
	}
	return ""
}

var File_warning_warning_proto protoreflect.FileDescriptor

var file_warning_warning_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x1a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x45, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x22, 0x45, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x32, 0xe4, 0x01,
	0x0a, 0x0b, 0x57, 0x61, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x81, 0x02, 0x0a, 0x0b, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x0a, 0x27, 0x63, 0x6e, 0x2e, 0x61,
	0x69, 0x72, 0x69, 0x6f, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x64, 0x75, 0x62, 0x62, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a, 0x11, 0x2e, 0x2f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x3b, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warning_warning_proto_rawDescOnce sync.Once
	file_warning_warning_proto_rawDescData = file_warning_warning_proto_rawDesc
)

func file_warning_warning_proto_rawDescGZIP() []byte {
	file_warning_warning_proto_rawDescOnce.Do(func() {
		file_warning_warning_proto_rawDescData = protoimpl.X.CompressGZIP(file_warning_warning_proto_rawDescData)
	})
	return file_warning_warning_proto_rawDescData
}

var file_warning_warning_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_warning_warning_proto_goTypes = []interface{}{
	(*QueryWarningRequest)(nil),       // 0: warning.QueryWarningRequest
	(*GetOrDeleteWarningRequest)(nil), // 1: warning.GetOrDeleteWarningRequest
	(*api.CreateRequest)(nil),         // 2: api.CreateRequest
	(*api.QueryRequest)(nil),          // 3: api.QueryRequest
	(*api.UpdateRequest)(nil),         // 4: api.UpdateRequest
	(*api.GetOrDeleteRequest)(nil),    // 5: api.GetOrDeleteRequest
	(*api.Response)(nil),              // 6: api.Response
}
var file_warning_warning_proto_depIdxs = []int32{
	0, // 0: warning.WarnService.Query:input_type -> warning.QueryWarningRequest
	1, // 1: warning.WarnService.Get:input_type -> warning.GetOrDeleteWarningRequest
	2, // 2: warning.WarnService.Create:input_type -> api.CreateRequest
	2, // 3: warning.WarnService.BatchCreate:input_type -> api.CreateRequest
	3, // 4: warning.RuleService.Query:input_type -> api.QueryRequest
	2, // 5: warning.RuleService.BatchCreate:input_type -> api.CreateRequest
	4, // 6: warning.RuleService.Update:input_type -> api.UpdateRequest
	5, // 7: warning.RuleService.Delete:input_type -> api.GetOrDeleteRequest
	4, // 8: warning.RuleService.Replace:input_type -> api.UpdateRequest
	6, // 9: warning.WarnService.Query:output_type -> api.Response
	6, // 10: warning.WarnService.Get:output_type -> api.Response
	6, // 11: warning.WarnService.Create:output_type -> api.Response
	6, // 12: warning.WarnService.BatchCreate:output_type -> api.Response
	6, // 13: warning.RuleService.Query:output_type -> api.Response
	6, // 14: warning.RuleService.BatchCreate:output_type -> api.Response
	6, // 15: warning.RuleService.Update:output_type -> api.Response
	6, // 16: warning.RuleService.Delete:output_type -> api.Response
	6, // 17: warning.RuleService.Replace:output_type -> api.Response
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_warning_warning_proto_init() }
func file_warning_warning_proto_init() {
	if File_warning_warning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_warning_warning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryWarningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_warning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrDeleteWarningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warning_warning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_warning_warning_proto_goTypes,
		DependencyIndexes: file_warning_warning_proto_depIdxs,
		MessageInfos:      file_warning_warning_proto_msgTypes,
	}.Build()
	File_warning_warning_proto = out.File
	file_warning_warning_proto_rawDesc = nil
	file_warning_warning_proto_goTypes = nil
	file_warning_warning_proto_depIdxs = nil
}

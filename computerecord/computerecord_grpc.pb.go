// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.5.1
// source: computerecord/computerecord.proto

package computerecord

import (
	context "context"
	api "github.com/air-iot/api-client-go/v4/api"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ComputeRecordServiceClient is the client API for ComputeRecordService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ComputeRecordServiceClient interface {
	FormulaDefaultSearch(ctx context.Context, in *api.CreateRequest, opts ...grpc.CallOption) (*api.Response, error)
}

type computeRecordServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewComputeRecordServiceClient(cc grpc.ClientConnInterface) ComputeRecordServiceClient {
	return &computeRecordServiceClient{cc}
}

func (c *computeRecordServiceClient) FormulaDefaultSearch(ctx context.Context, in *api.CreateRequest, opts ...grpc.CallOption) (*api.Response, error) {
	out := new(api.Response)
	err := c.cc.Invoke(ctx, "/computerecord.ComputeRecordService/FormulaDefaultSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComputeRecordServiceServer is the server API for ComputeRecordService service.
// All implementations must embed UnimplementedComputeRecordServiceServer
// for forward compatibility
type ComputeRecordServiceServer interface {
	FormulaDefaultSearch(context.Context, *api.CreateRequest) (*api.Response, error)
	mustEmbedUnimplementedComputeRecordServiceServer()
}

// UnimplementedComputeRecordServiceServer must be embedded to have forward compatible implementations.
type UnimplementedComputeRecordServiceServer struct {
}

func (UnimplementedComputeRecordServiceServer) FormulaDefaultSearch(context.Context, *api.CreateRequest) (*api.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormulaDefaultSearch not implemented")
}
func (UnimplementedComputeRecordServiceServer) mustEmbedUnimplementedComputeRecordServiceServer() {}

// UnsafeComputeRecordServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ComputeRecordServiceServer will
// result in compilation errors.
type UnsafeComputeRecordServiceServer interface {
	mustEmbedUnimplementedComputeRecordServiceServer()
}

func RegisterComputeRecordServiceServer(s grpc.ServiceRegistrar, srv ComputeRecordServiceServer) {
	s.RegisterService(&ComputeRecordService_ServiceDesc, srv)
}

func _ComputeRecordService_FormulaDefaultSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(api.CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeRecordServiceServer).FormulaDefaultSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/computerecord.ComputeRecordService/FormulaDefaultSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeRecordServiceServer).FormulaDefaultSearch(ctx, req.(*api.CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ComputeRecordService_ServiceDesc is the grpc.ServiceDesc for ComputeRecordService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ComputeRecordService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "computerecord.ComputeRecordService",
	HandlerType: (*ComputeRecordServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FormulaDefaultSearch",
			Handler:    _ComputeRecordService_FormulaDefaultSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "computerecord/computerecord.proto",
}

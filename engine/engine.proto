
// protoc -I ./ --go_out=. ./engine/engine.proto
// protoc -I ./ --go-grpc_out=. engine/engine.proto
syntax = "proto3";

import "google/protobuf/empty.proto";

package engine;

option go_package = "./engine;engine";
option java_package = "cn.airiot.sdk.client.dubbo.grpc.engine";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;
option java_generic_services = true;

service EngineService {
  rpc Run (RunRequest) returns (RunResponse) {}
  rpc Resume (ResumeRequest) returns (google.protobuf.Empty) {}
  rpc Fail (FailRequest) returns (google.protobuf.Empty) {}
}

service PluginService {
  rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse) {}
  rpc Register (stream FlowResponse) returns (stream FlowRequest){}
  rpc DebugStream (stream DebugResponse) returns (stream DebugRequest){}
}

service ExtensionService {
  rpc HealthCheck (ExtensionHealthCheckRequest) returns (ExtensionHealthCheckResponse) {}
  rpc SchemaStream (stream  ExtensionResult) returns (stream ExtensionSchemaRequest) {}
  rpc RunStream (stream  ExtensionResult) returns (stream  ExtensionRunRequest) {}
}

message RunRequest {
  string projectId = 1;
  string config = 2;
  bytes element = 3;
  bytes variables = 4;
}

message RunResponse {
  string job = 1;
}

message ResumeRequest {
  string projectId = 1;
  string jobId = 2;
  string elementId = 3;
  bytes variables = 4;
}

message FailRequest {
  string projectId = 1;
  string jobId = 2;
  string elementId = 3;
  string errorMessage = 4;
}

message HealthCheckRequest {
  string name = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
  repeated Error errors = 2;
}

message Error {
  enum ErrorCode {
    Register = 0;
  }
  ErrorCode code = 1;
  string message = 2;
}

message FlowRequest{
  string projectId = 1;
  string flowId = 2;
  string job = 3;
  string elementId = 4;
  string elementJob = 5;
  bytes config = 6;
}

message FlowResponse{
  string elementJob = 1;
  bool status = 2;
  string info = 3;
  string detail = 4;
  bytes result = 5;
}

message DebugRequest{
  string projectId = 1;
  string flowId = 2;
  string elementId = 3;
  string elementJob = 5;
  bytes config = 6;
}

message DebugResponse{
  string elementJob = 1;
  bool status = 2;
  string info = 3;
  string detail = 4;
  bytes result = 5;
}

message ExtensionHealthCheckRequest {
  string id = 1;
}

message ExtensionHealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
  repeated ExtensionError errors = 2;
}

message ExtensionError {
  enum ErrorCode {
    Schema = 0;
    Run = 1;
  }
  ErrorCode code = 1;
  string message = 2;
}

message ExtensionSchemaRequest {
  string request = 1;
}

message ExtensionRunRequest {
  string request = 1;
  bytes data = 2;
}

message ExtensionResult {
  string request = 1;
  bool status = 2;
  string info = 3;
  string detail = 4;
  bytes result = 5;
}

